openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  /api/v1/evaluation-criteria:
    get:
      summary: ''
      operationId: getApiV1EvaluationCriteria
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: '{YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      name: Отопление
                    -
                      id: 2
                      name: Соседи
                    -
                      id: 3
                      name: 'Уровень шума'
                    -
                      id: 4
                      name: 'Отзывчивость хозяев'
                    -
                      id: 5
                      name: Тараканы
                    -
                      id: 6
                      name: Чистота
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        name: Отопление
                      -
                        id: 2
                        name: Соседи
                      -
                        id: 3
                        name: 'Уровень шума'
                      -
                        id: 4
                        name: 'Отзывчивость хозяев'
                      -
                        id: 5
                        name: Тараканы
                      -
                        id: 6
                        name: Чистота
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        name:
                          type: string
                          example: Отопление
      tags:
        - Endpoints
  /api/v1/buildings:
    post:
      summary: ''
      operationId: postApiV1Buildings
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: '{YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  type: string
                  description: ''
                  example: fuga
              required:
                - address
  '/api/v1/buildings/{id}/apartments':
    get:
      summary: ''
      operationId: getApiV1BuildingsIdApartments
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: '{YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      id: 1
                      number: 12
                      amountOfRooms: 2
                      floor: 4
                      rating: '1.4'
                properties:
                  data:
                    type: array
                    example:
                      -
                        id: 1
                        number: 12
                        amountOfRooms: 2
                        floor: 4
                        rating: '1.4'
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        number:
                          type: integer
                          example: 12
                        amountOfRooms:
                          type: integer
                          example: 2
                        floor:
                          type: integer
                          example: 4
                        rating:
                          type: string
                          example: '1.4'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the building.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/apartments/{id}':
    get:
      summary: ''
      operationId: getApiV1ApartmentsId
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: '{YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  id: 1
                  number: 12
                  amountOfRooms: 2
                  floor: 4
                  rating: '1.4'
                properties:
                  id:
                    type: integer
                    example: 1
                  number:
                    type: integer
                    example: 12
                  amountOfRooms:
                    type: integer
                    example: 2
                  floor:
                    type: integer
                    example: 4
                  rating:
                    type: string
                    example: '1.4'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the apartment.'
        example: 1
        required: true
        schema:
          type: integer
  '/api/v1/apartments/{id}/reviews':
    get:
      summary: ''
      operationId: getApiV1ApartmentsIdReviews
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: '{YOUR_AUTH_KEY}'
          schema:
            type: string
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  data:
                    -
                      title: 'Бывало и лучше, но пойдет'
                      rating: 2.3
                      pros: 'Просторная и функциональная, с удобной планировкой и просторная. В квартире есть кухня со всей необходимой бытовой техникой и удобная мебель.'
                      cons: 'Отсутствие звукоизоляции, плохое качество сантехники.'
                      adviceToOwner: 'Было бы просто великолепно обновить сантехнику, кран и душ в ванне. Они постоянно ломаются и их надо докручивать.'
                    -
                      title: 'Неплохая квартирка'
                      rating: 3.7
                      pros: 'Хорошая планировка. Мебель и бытовая техника находятся в отличном состоянии, и арендодатель всегда быстро реагирует на любые проблемы.'
                      cons: 'Недостаточная освещенность, шумные соседи, высокие расходы на коммунальные услуги.'
                      adviceToOwner: 'Выровнять полы, они кривые. Постоянно ходишь по квартире и проваливаешься в небольшие ямки под линолеумом.'
                    -
                      title: hola
                      rating: 1
                      pros: hola
                      cons: hola
                      adviceToOwner: string
                    -
                      title: hola
                      rating: 1
                      pros: hola
                      cons: hola
                      adviceToOwner: string
                    -
                      title: hola
                      rating: 1
                      pros: hola
                      cons: hola
                      adviceToOwner: string
                    -
                      title: hola
                      rating: 1
                      pros: hola
                      cons: hola
                      adviceToOwner: string
                    -
                      title: hola
                      rating: 1
                      pros: hola
                      cons: hola
                      adviceToOwner: string
                    -
                      title: 'Не заезжайте сюда'
                      rating: 1
                      pros: 'тараканы были вежливыми'
                      cons: 'тараканов было много'
                      adviceToOwner: 'убейте тараканов'
                    -
                      title: 'Не заезжайте сюда'
                      rating: 1
                      pros: 'тараканы были вежливыми'
                      cons: 'тараканов было много'
                      adviceToOwner: 'убейте тараканов'
                properties:
                  data:
                    type: array
                    example:
                      -
                        title: 'Бывало и лучше, но пойдет'
                        rating: 2.3
                        pros: 'Просторная и функциональная, с удобной планировкой и просторная. В квартире есть кухня со всей необходимой бытовой техникой и удобная мебель.'
                        cons: 'Отсутствие звукоизоляции, плохое качество сантехники.'
                        adviceToOwner: 'Было бы просто великолепно обновить сантехнику, кран и душ в ванне. Они постоянно ломаются и их надо докручивать.'
                      -
                        title: 'Неплохая квартирка'
                        rating: 3.7
                        pros: 'Хорошая планировка. Мебель и бытовая техника находятся в отличном состоянии, и арендодатель всегда быстро реагирует на любые проблемы.'
                        cons: 'Недостаточная освещенность, шумные соседи, высокие расходы на коммунальные услуги.'
                        adviceToOwner: 'Выровнять полы, они кривые. Постоянно ходишь по квартире и проваливаешься в небольшие ямки под линолеумом.'
                      -
                        title: hola
                        rating: 1
                        pros: hola
                        cons: hola
                        adviceToOwner: string
                      -
                        title: hola
                        rating: 1
                        pros: hola
                        cons: hola
                        adviceToOwner: string
                      -
                        title: hola
                        rating: 1
                        pros: hola
                        cons: hola
                        adviceToOwner: string
                      -
                        title: hola
                        rating: 1
                        pros: hola
                        cons: hola
                        adviceToOwner: string
                      -
                        title: hola
                        rating: 1
                        pros: hola
                        cons: hola
                        adviceToOwner: string
                      -
                        title: 'Не заезжайте сюда'
                        rating: 1
                        pros: 'тараканы были вежливыми'
                        cons: 'тараканов было много'
                        adviceToOwner: 'убейте тараканов'
                      -
                        title: 'Не заезжайте сюда'
                        rating: 1
                        pros: 'тараканы были вежливыми'
                        cons: 'тараканов было много'
                        adviceToOwner: 'убейте тараканов'
                    items:
                      type: object
                      properties:
                        title:
                          type: string
                          example: 'Бывало и лучше, но пойдет'
                        rating:
                          type: number
                          example: 2.3
                        pros:
                          type: string
                          example: 'Просторная и функциональная, с удобной планировкой и просторная. В квартире есть кухня со всей необходимой бытовой техникой и удобная мебель.'
                        cons:
                          type: string
                          example: 'Отсутствие звукоизоляции, плохое качество сантехники.'
                        adviceToOwner:
                          type: string
                          example: 'Было бы просто великолепно обновить сантехнику, кран и душ в ванне. Они постоянно ломаются и их надо докручивать.'
      tags:
        - Endpoints
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the apartment.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/reviews:
    post:
      summary: ''
      operationId: postApiV1Reviews
      description: ''
      parameters:
        -
          in: header
          name: Authorization
          description: ''
          example: '{YOUR_AUTH_KEY}'
          schema:
            type: string
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                apartmentId:
                  type: number
                  description: ''
                  example: 378.4878673
                apartmentMeta:
                  type: object
                  description: ''
                  example: null
                  properties:
                    amountOfRooms:
                      type: number
                      description: ''
                      example: 2527.756677
                    floor:
                      type: number
                      description: ''
                      example: 75227707.995
                evaluationCriteriaItems:
                  type: array
                  description: ''
                  example:
                    - consequatur
                  items:
                    type: number
                review:
                  type: object
                  description: ''
                  example: []
                  properties:
                    title:
                      type: string
                      description: ''
                      example: ipsa
                    pros:
                      type: string
                      description: ''
                      example: corporis
                    cons:
                      type: string
                      description: ''
                      example: alias
                    adviceToOwner:
                      type: string
                      description: ''
                      example: earum
              required:
                - apartmentId
                - evaluationCriteriaItems
                - review
tags:
  -
    name: Endpoints
    description: ''
components:
  securitySchemes:
    default:
      type: apiKey
      name: Authorization
      in: header
      description: ''
security:
  -
    default: []
